
Traffic_Light_Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003b2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000406  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000406  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000438  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a32  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f8  00000000  00000000  00000f56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000813  00000000  00000000  0000164e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00001e64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000444  00000000  00000000  00001f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008c5  00000000  00000000  000023bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002c81  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 c8 01 	call	0x390	; 0x390 <main>
  74:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <LED_init>:
#include "LED.h"
#include "../../MCAL/Timer/Timer.h"

Error LED_init (u8 pin_Number)
{
	DIO_Pin_Init(pin_Number, OUTPUT);
  7c:	61 e0       	ldi	r22, 0x01	; 1
  7e:	0e 94 e7 00 	call	0x1ce	; 0x1ce <DIO_Pin_Init>
}
  82:	08 95       	ret

00000084 <LED_on>:

Error LED_on (u8 pinNumber)
{
	DIO_Pin_Write(pinNumber, HIGH);
  84:	61 e0       	ldi	r22, 0x01	; 1
  86:	0e 94 4d 00 	call	0x9a	; 0x9a <DIO_Pin_Write>
}
  8a:	08 95       	ret

0000008c <LED_off>:
Error LED_off (u8 pinNumber)
{
	DIO_Pin_Write(pinNumber, LOW);
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	0e 94 4d 00 	call	0x9a	; 0x9a <DIO_Pin_Write>
}
  92:	08 95       	ret

00000094 <LED_toggle>:
Error LED_toggle (u8 pinNumber)
{
	DIO_Pin_Toggle(pinNumber);
  94:	0e 94 81 01 	call	0x302	; 0x302 <DIO_Pin_Toggle>
}
  98:	08 95       	ret

0000009a <DIO_Pin_Write>:
	}
	else
	{
		return ERROR;
	}
}
  9a:	88 30       	cpi	r24, 0x08	; 8
  9c:	08 f5       	brcc	.+66     	; 0xe0 <DIO_Pin_Write+0x46>
  9e:	61 30       	cpi	r22, 0x01	; 1
  a0:	71 f4       	brne	.+28     	; 0xbe <DIO_Pin_Write+0x24>
  a2:	4b b3       	in	r20, 0x1b	; 27
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	b9 01       	movw	r22, r18
  aa:	02 c0       	rjmp	.+4      	; 0xb0 <DIO_Pin_Write+0x16>
  ac:	66 0f       	add	r22, r22
  ae:	77 1f       	adc	r23, r23
  b0:	8a 95       	dec	r24
  b2:	e2 f7       	brpl	.-8      	; 0xac <DIO_Pin_Write+0x12>
  b4:	cb 01       	movw	r24, r22
  b6:	84 2b       	or	r24, r20
  b8:	8b bb       	out	0x1b, r24	; 27
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	08 95       	ret
  be:	61 11       	cpse	r22, r1
  c0:	7e c0       	rjmp	.+252    	; 0x1be <DIO_Pin_Write+0x124>
  c2:	4b b3       	in	r20, 0x1b	; 27
  c4:	21 e0       	ldi	r18, 0x01	; 1
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	b9 01       	movw	r22, r18
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <DIO_Pin_Write+0x36>
  cc:	66 0f       	add	r22, r22
  ce:	77 1f       	adc	r23, r23
  d0:	8a 95       	dec	r24
  d2:	e2 f7       	brpl	.-8      	; 0xcc <DIO_Pin_Write+0x32>
  d4:	cb 01       	movw	r24, r22
  d6:	80 95       	com	r24
  d8:	84 23       	and	r24, r20
  da:	8b bb       	out	0x1b, r24	; 27
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	08 95       	ret
  e0:	98 ef       	ldi	r25, 0xF8	; 248
  e2:	98 0f       	add	r25, r24
  e4:	98 30       	cpi	r25, 0x08	; 8
  e6:	08 f5       	brcc	.+66     	; 0x12a <DIO_Pin_Write+0x90>
  e8:	61 30       	cpi	r22, 0x01	; 1
  ea:	71 f4       	brne	.+28     	; 0x108 <DIO_Pin_Write+0x6e>
  ec:	48 b3       	in	r20, 0x18	; 24
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	b9 01       	movw	r22, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_Pin_Write+0x60>
  f6:	66 0f       	add	r22, r22
  f8:	77 1f       	adc	r23, r23
  fa:	9a 95       	dec	r25
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_Pin_Write+0x5c>
  fe:	cb 01       	movw	r24, r22
 100:	84 2b       	or	r24, r20
 102:	88 bb       	out	0x18, r24	; 24
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	08 95       	ret
 108:	61 11       	cpse	r22, r1
 10a:	5b c0       	rjmp	.+182    	; 0x1c2 <DIO_Pin_Write+0x128>
 10c:	48 b3       	in	r20, 0x18	; 24
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	b9 01       	movw	r22, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_Pin_Write+0x80>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	9a 95       	dec	r25
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_Pin_Write+0x7c>
 11e:	cb 01       	movw	r24, r22
 120:	80 95       	com	r24
 122:	84 23       	and	r24, r20
 124:	88 bb       	out	0x18, r24	; 24
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	08 95       	ret
 12a:	90 ef       	ldi	r25, 0xF0	; 240
 12c:	98 0f       	add	r25, r24
 12e:	98 30       	cpi	r25, 0x08	; 8
 130:	08 f5       	brcc	.+66     	; 0x174 <DIO_Pin_Write+0xda>
 132:	61 30       	cpi	r22, 0x01	; 1
 134:	71 f4       	brne	.+28     	; 0x152 <DIO_Pin_Write+0xb8>
 136:	45 b3       	in	r20, 0x15	; 21
 138:	21 e0       	ldi	r18, 0x01	; 1
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	b9 01       	movw	r22, r18
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_Pin_Write+0xaa>
 140:	66 0f       	add	r22, r22
 142:	77 1f       	adc	r23, r23
 144:	9a 95       	dec	r25
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_Pin_Write+0xa6>
 148:	cb 01       	movw	r24, r22
 14a:	84 2b       	or	r24, r20
 14c:	85 bb       	out	0x15, r24	; 21
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	08 95       	ret
 152:	61 11       	cpse	r22, r1
 154:	38 c0       	rjmp	.+112    	; 0x1c6 <DIO_Pin_Write+0x12c>
 156:	45 b3       	in	r20, 0x15	; 21
 158:	21 e0       	ldi	r18, 0x01	; 1
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	b9 01       	movw	r22, r18
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_Pin_Write+0xca>
 160:	66 0f       	add	r22, r22
 162:	77 1f       	adc	r23, r23
 164:	9a 95       	dec	r25
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_Pin_Write+0xc6>
 168:	cb 01       	movw	r24, r22
 16a:	80 95       	com	r24
 16c:	84 23       	and	r24, r20
 16e:	85 bb       	out	0x15, r24	; 21
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	08 95       	ret
 174:	88 51       	subi	r24, 0x18	; 24
 176:	88 30       	cpi	r24, 0x08	; 8
 178:	08 f5       	brcc	.+66     	; 0x1bc <DIO_Pin_Write+0x122>
 17a:	61 30       	cpi	r22, 0x01	; 1
 17c:	71 f4       	brne	.+28     	; 0x19a <DIO_Pin_Write+0x100>
 17e:	42 b3       	in	r20, 0x12	; 18
 180:	21 e0       	ldi	r18, 0x01	; 1
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	b9 01       	movw	r22, r18
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_Pin_Write+0xf2>
 188:	66 0f       	add	r22, r22
 18a:	77 1f       	adc	r23, r23
 18c:	8a 95       	dec	r24
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_Pin_Write+0xee>
 190:	cb 01       	movw	r24, r22
 192:	84 2b       	or	r24, r20
 194:	82 bb       	out	0x12, r24	; 18
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	08 95       	ret
 19a:	61 11       	cpse	r22, r1
 19c:	16 c0       	rjmp	.+44     	; 0x1ca <DIO_Pin_Write+0x130>
 19e:	42 b3       	in	r20, 0x12	; 18
 1a0:	21 e0       	ldi	r18, 0x01	; 1
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	b9 01       	movw	r22, r18
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_Pin_Write+0x112>
 1a8:	66 0f       	add	r22, r22
 1aa:	77 1f       	adc	r23, r23
 1ac:	8a 95       	dec	r24
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_Pin_Write+0x10e>
 1b0:	cb 01       	movw	r24, r22
 1b2:	80 95       	com	r24
 1b4:	84 23       	and	r24, r20
 1b6:	82 bb       	out	0x12, r24	; 18
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	08 95       	ret
 1bc:	08 95       	ret
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	08 95       	ret
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	08 95       	ret
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	08 95       	ret
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	08 95       	ret

000001ce <DIO_Pin_Init>:
 1ce:	88 30       	cpi	r24, 0x08	; 8
 1d0:	08 f5       	brcc	.+66     	; 0x214 <DIO_Pin_Init+0x46>
 1d2:	61 30       	cpi	r22, 0x01	; 1
 1d4:	71 f4       	brne	.+28     	; 0x1f2 <DIO_Pin_Init+0x24>
 1d6:	4a b3       	in	r20, 0x1a	; 26
 1d8:	21 e0       	ldi	r18, 0x01	; 1
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	b9 01       	movw	r22, r18
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_Pin_Init+0x16>
 1e0:	66 0f       	add	r22, r22
 1e2:	77 1f       	adc	r23, r23
 1e4:	8a 95       	dec	r24
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_Pin_Init+0x12>
 1e8:	cb 01       	movw	r24, r22
 1ea:	84 2b       	or	r24, r20
 1ec:	8a bb       	out	0x1a, r24	; 26
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	08 95       	ret
 1f2:	61 11       	cpse	r22, r1
 1f4:	7e c0       	rjmp	.+252    	; 0x2f2 <DIO_Pin_Init+0x124>
 1f6:	4a b3       	in	r20, 0x1a	; 26
 1f8:	21 e0       	ldi	r18, 0x01	; 1
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	b9 01       	movw	r22, r18
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_Pin_Init+0x36>
 200:	66 0f       	add	r22, r22
 202:	77 1f       	adc	r23, r23
 204:	8a 95       	dec	r24
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_Pin_Init+0x32>
 208:	cb 01       	movw	r24, r22
 20a:	80 95       	com	r24
 20c:	84 23       	and	r24, r20
 20e:	8a bb       	out	0x1a, r24	; 26
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	08 95       	ret
 214:	98 ef       	ldi	r25, 0xF8	; 248
 216:	98 0f       	add	r25, r24
 218:	98 30       	cpi	r25, 0x08	; 8
 21a:	08 f5       	brcc	.+66     	; 0x25e <DIO_Pin_Init+0x90>
 21c:	61 30       	cpi	r22, 0x01	; 1
 21e:	71 f4       	brne	.+28     	; 0x23c <DIO_Pin_Init+0x6e>
 220:	47 b3       	in	r20, 0x17	; 23
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	b9 01       	movw	r22, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_Pin_Init+0x60>
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	9a 95       	dec	r25
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_Pin_Init+0x5c>
 232:	cb 01       	movw	r24, r22
 234:	84 2b       	or	r24, r20
 236:	87 bb       	out	0x17, r24	; 23
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	08 95       	ret
 23c:	61 11       	cpse	r22, r1
 23e:	5b c0       	rjmp	.+182    	; 0x2f6 <DIO_Pin_Init+0x128>
 240:	47 b3       	in	r20, 0x17	; 23
 242:	21 e0       	ldi	r18, 0x01	; 1
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	b9 01       	movw	r22, r18
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_Pin_Init+0x80>
 24a:	66 0f       	add	r22, r22
 24c:	77 1f       	adc	r23, r23
 24e:	9a 95       	dec	r25
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_Pin_Init+0x7c>
 252:	cb 01       	movw	r24, r22
 254:	80 95       	com	r24
 256:	84 23       	and	r24, r20
 258:	87 bb       	out	0x17, r24	; 23
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	08 95       	ret
 25e:	90 ef       	ldi	r25, 0xF0	; 240
 260:	98 0f       	add	r25, r24
 262:	98 30       	cpi	r25, 0x08	; 8
 264:	08 f5       	brcc	.+66     	; 0x2a8 <DIO_Pin_Init+0xda>
 266:	61 30       	cpi	r22, 0x01	; 1
 268:	71 f4       	brne	.+28     	; 0x286 <DIO_Pin_Init+0xb8>
 26a:	44 b3       	in	r20, 0x14	; 20
 26c:	21 e0       	ldi	r18, 0x01	; 1
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	b9 01       	movw	r22, r18
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_Pin_Init+0xaa>
 274:	66 0f       	add	r22, r22
 276:	77 1f       	adc	r23, r23
 278:	9a 95       	dec	r25
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_Pin_Init+0xa6>
 27c:	cb 01       	movw	r24, r22
 27e:	84 2b       	or	r24, r20
 280:	84 bb       	out	0x14, r24	; 20
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	08 95       	ret
 286:	61 11       	cpse	r22, r1
 288:	38 c0       	rjmp	.+112    	; 0x2fa <DIO_Pin_Init+0x12c>
 28a:	44 b3       	in	r20, 0x14	; 20
 28c:	21 e0       	ldi	r18, 0x01	; 1
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	b9 01       	movw	r22, r18
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_Pin_Init+0xca>
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	9a 95       	dec	r25
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_Pin_Init+0xc6>
 29c:	cb 01       	movw	r24, r22
 29e:	80 95       	com	r24
 2a0:	84 23       	and	r24, r20
 2a2:	84 bb       	out	0x14, r24	; 20
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	08 95       	ret
 2a8:	88 51       	subi	r24, 0x18	; 24
 2aa:	88 30       	cpi	r24, 0x08	; 8
 2ac:	08 f5       	brcc	.+66     	; 0x2f0 <DIO_Pin_Init+0x122>
 2ae:	61 30       	cpi	r22, 0x01	; 1
 2b0:	71 f4       	brne	.+28     	; 0x2ce <DIO_Pin_Init+0x100>
 2b2:	41 b3       	in	r20, 0x11	; 17
 2b4:	21 e0       	ldi	r18, 0x01	; 1
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	b9 01       	movw	r22, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <DIO_Pin_Init+0xf2>
 2bc:	66 0f       	add	r22, r22
 2be:	77 1f       	adc	r23, r23
 2c0:	8a 95       	dec	r24
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <DIO_Pin_Init+0xee>
 2c4:	cb 01       	movw	r24, r22
 2c6:	84 2b       	or	r24, r20
 2c8:	81 bb       	out	0x11, r24	; 17
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	08 95       	ret
 2ce:	61 11       	cpse	r22, r1
 2d0:	16 c0       	rjmp	.+44     	; 0x2fe <DIO_Pin_Init+0x130>
 2d2:	41 b3       	in	r20, 0x11	; 17
 2d4:	21 e0       	ldi	r18, 0x01	; 1
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	b9 01       	movw	r22, r18
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_Pin_Init+0x112>
 2dc:	66 0f       	add	r22, r22
 2de:	77 1f       	adc	r23, r23
 2e0:	8a 95       	dec	r24
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_Pin_Init+0x10e>
 2e4:	cb 01       	movw	r24, r22
 2e6:	80 95       	com	r24
 2e8:	84 23       	and	r24, r20
 2ea:	81 bb       	out	0x11, r24	; 17
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	08 95       	ret
 2f0:	08 95       	ret
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	08 95       	ret
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	08 95       	ret
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	08 95       	ret
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	08 95       	ret

00000302 <DIO_Pin_Toggle>:
 * \return u8 : The return of this function will be an indication of the execution
 *
 **/
Error DIO_Pin_Toggle(u8 u8Pin_number)
{
	if (u8Pin_number >= 0 && u8Pin_number <= 7)
 302:	88 30       	cpi	r24, 0x08	; 8
 304:	70 f4       	brcc	.+28     	; 0x322 <DIO_Pin_Toggle+0x20>
	{
		TOGGLE_BIT(PORTA, u8Pin_number);
 306:	4b b3       	in	r20, 0x1b	; 27
 308:	21 e0       	ldi	r18, 0x01	; 1
 30a:	30 e0       	ldi	r19, 0x00	; 0
 30c:	b9 01       	movw	r22, r18
 30e:	02 c0       	rjmp	.+4      	; 0x314 <DIO_Pin_Toggle+0x12>
 310:	66 0f       	add	r22, r22
 312:	77 1f       	adc	r23, r23
 314:	8a 95       	dec	r24
 316:	e2 f7       	brpl	.-8      	; 0x310 <DIO_Pin_Toggle+0xe>
 318:	cb 01       	movw	r24, r22
 31a:	84 27       	eor	r24, r20
 31c:	8b bb       	out	0x1b, r24	; 27
		return NO_ERROR;
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	08 95       	ret
	}
	else if (u8Pin_number >= 8 && u8Pin_number <= 15)
 322:	98 ef       	ldi	r25, 0xF8	; 248
 324:	98 0f       	add	r25, r24
 326:	98 30       	cpi	r25, 0x08	; 8
 328:	70 f4       	brcc	.+28     	; 0x346 <DIO_Pin_Toggle+0x44>
	{
		u8Pin_number -= 8;
		TOGGLE_BIT(PORTB, u8Pin_number);
 32a:	48 b3       	in	r20, 0x18	; 24
 32c:	21 e0       	ldi	r18, 0x01	; 1
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	b9 01       	movw	r22, r18
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_Pin_Toggle+0x36>
 334:	66 0f       	add	r22, r22
 336:	77 1f       	adc	r23, r23
 338:	9a 95       	dec	r25
 33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_Pin_Toggle+0x32>
 33c:	cb 01       	movw	r24, r22
 33e:	84 27       	eor	r24, r20
 340:	88 bb       	out	0x18, r24	; 24
		return NO_ERROR;
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	08 95       	ret
	}
	else if (u8Pin_number >= 16 && u8Pin_number <= 23)
 346:	90 ef       	ldi	r25, 0xF0	; 240
 348:	98 0f       	add	r25, r24
 34a:	98 30       	cpi	r25, 0x08	; 8
 34c:	70 f4       	brcc	.+28     	; 0x36a <DIO_Pin_Toggle+0x68>
	{
		u8Pin_number -= 16;
		TOGGLE_BIT(PORTC, u8Pin_number);
 34e:	45 b3       	in	r20, 0x15	; 21
 350:	21 e0       	ldi	r18, 0x01	; 1
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	b9 01       	movw	r22, r18
 356:	02 c0       	rjmp	.+4      	; 0x35c <DIO_Pin_Toggle+0x5a>
 358:	66 0f       	add	r22, r22
 35a:	77 1f       	adc	r23, r23
 35c:	9a 95       	dec	r25
 35e:	e2 f7       	brpl	.-8      	; 0x358 <DIO_Pin_Toggle+0x56>
 360:	cb 01       	movw	r24, r22
 362:	84 27       	eor	r24, r20
 364:	85 bb       	out	0x15, r24	; 21
		return NO_ERROR;
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	08 95       	ret
	}
	else if (u8Pin_number >= 24 && u8Pin_number <= 31)
 36a:	88 51       	subi	r24, 0x18	; 24
 36c:	88 30       	cpi	r24, 0x08	; 8
 36e:	70 f4       	brcc	.+28     	; 0x38c <DIO_Pin_Toggle+0x8a>
	{
		u8Pin_number -= 24;
		TOGGLE_BIT(PORTD, u8Pin_number);
 370:	42 b3       	in	r20, 0x12	; 18
 372:	21 e0       	ldi	r18, 0x01	; 1
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	b9 01       	movw	r22, r18
 378:	02 c0       	rjmp	.+4      	; 0x37e <DIO_Pin_Toggle+0x7c>
 37a:	66 0f       	add	r22, r22
 37c:	77 1f       	adc	r23, r23
 37e:	8a 95       	dec	r24
 380:	e2 f7       	brpl	.-8      	; 0x37a <DIO_Pin_Toggle+0x78>
 382:	cb 01       	movw	r24, r22
 384:	84 27       	eor	r24, r20
 386:	82 bb       	out	0x12, r24	; 18
		return NO_ERROR;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	08 95       	ret

	}
	else
	{
		return ERROR;
 38c:	80 e0       	ldi	r24, 0x00	; 0
	}
}
 38e:	08 95       	ret

00000390 <main>:

#if (LED_TEST == 1)

int main(void)
{
	LED_init(3);
 390:	83 e0       	ldi	r24, 0x03	; 3
 392:	0e 94 3e 00 	call	0x7c	; 0x7c <LED_init>
	LED_on(3);
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	0e 94 42 00 	call	0x84	; 0x84 <LED_on>
	LED_off(3);
 39c:	83 e0       	ldi	r24, 0x03	; 3
 39e:	0e 94 46 00 	call	0x8c	; 0x8c <LED_off>
	LED_toggle(3);
 3a2:	83 e0       	ldi	r24, 0x03	; 3
 3a4:	0e 94 4a 00 	call	0x94	; 0x94 <LED_toggle>
}
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	08 95       	ret

000003ae <_exit>:
 3ae:	f8 94       	cli

000003b0 <__stop_program>:
 3b0:	ff cf       	rjmp	.-2      	; 0x3b0 <__stop_program>
